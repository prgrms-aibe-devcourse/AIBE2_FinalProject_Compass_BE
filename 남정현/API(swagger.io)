openapi: 3.0.3
info:
  title: "AI 여행 플래너 API (BE-3 파트)"
  description: |
    BE-3 파트에서 담당하는 결제, 공유, 실시간 알림 기능에 대한 API 명세서입니다.
    
    **인증**: 모든 API는 Bearer Token (JWT) 인증이 필요합니다. 
    요청 헤더에 `Authorization: Bearer {token}`을 포함해야 합니다.

    **실시간 알림 (WebSocket)**:
    - **Endpoint**: `wss://api.yourdomain.com/ws`
    - **프로토콜**: STOMP over WebSocket
    - **구독 경로**: `/user/queue/notifications`
    - **설명**: 사용자가 로그인 후 WebSocket에 연결하고 위 경로를 구독하면, 새로운 알림 발생 시 실시간으로 메시지를 수신합니다.
  version: "1.0.0"

servers:
  - url: "https://api.yourdomain.com/v1"
    description: "Production Server"

tags:
  - name: "💳 Payment & Credit"
    description: "결제 및 크레딧 관련 API"
  - name: "🔗 Sharing"
    description: "여행 계획 공유 관련 API"
  - name: "🔔 Notifications"
    description: "사용자 알림 관련 API"

paths:
  # =================== Payment & Credit ===================
  /credits/products:
    get:
      tags:
        - "💳 Payment & Credit"
      summary: "크레딧 상품 목록 조회"
      description: "사용자가 구매할 수 있는 모든 활성화된 크레딧 상품 목록을 조회합니다."
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "성공적으로 상품 목록을 조회함"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditProduct'

  /payments/prepare:
    post:
      tags:
        - "💳 Payment & Credit"
      summary: "결제 준비 (카카오페이)"
      description: "선택한 상품에 대한 카카오페이 결제를 준비하고, 결제 페이지로 리디렉션할 URL을 받습니다."
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  format: uuid
                  example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
      responses:
        '200':
          description: "결제 준비 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    type: string
                    format: uri
                    example: "https://pg-web.kakao.com/v/..."

  /payments/history:
    get:
      tags:
        - "💳 Payment & Credit"
      summary: "내 결제 내역 조회"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "결제 내역 조회 성공"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'

  /credits/transactions:
    get:
      tags:
        - "💳 Payment & Credit"
      summary: "내 크레딧 사용/충전 내역 조회"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "크레딧 거래 내역 조회 성공"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditTransaction'

  # =================== Sharing ===================
  /share/links:
    post:
      tags:
        - "🔗 Sharing"
      summary: "여행 계획 공유 링크 생성"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_id:
                  type: string
                  format: uuid
                  description: "공유할 여행 계획의 ID"
                expires_at:
                  type: string
                  format: date-time
                  description: "만료일 (설정하지 않으면 영구)"
      responses:
        '201':
          description: "공유 링크 생성 성공"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLink'

  /share/links/{link_id}:
    delete:
      tags:
        - "🔗 Sharing"
      summary: "공유 링크 비활성화"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: link_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: "성공적으로 비활성화됨"

  # =================== Notifications ===================
  /notifications:
    get:
      tags:
        - "🔔 Notifications"
      summary: "내 알림 목록 조회"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "알림 목록 조회 성공"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

  /notifications/settings:
    put:
      tags:
        - "🔔 Notifications"
      summary: "알림 설정 수정"
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email_enabled:
                  type: boolean
                push_enabled:
                  type: boolean
      responses:
        '200':
          description: "설정 변경 성공"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CreditProduct:
      type: object
      properties:
        product_id:
          type: string
          format: uuid
        product_name:
          type: string
        price:
          type: number
        credit_amount:
          type: integer

    Payment:
      type: object
      properties:
        payment_id:
          type: string
          format: uuid
        product_name:
          type: string
        amount:
          type: number
        status:
          type: string
          enum: [completed, failed, pending]
        created_at:
          type: string
          format: date-time

    CreditTransaction:
      type: object
      properties:
        transaction_id:
          type: string
          format: uuid
        transaction_type:
          type: string
          enum: [charge, usage]
        amount:
          type: integer
        description:
          type: string
        created_at:
          type: string
          format: date-time

    ShareLink:
      type: object
      properties:
        link_id:
          type: string
          format: uuid
        plan_id:
          type: string
          format: uuid
        share_token:
          type: string
          description: "실제 공유에 사용될 고유 토큰 값"
        share_url:
          type: string
          format: uri
          description: "완성된 공유 URL"
        is_active:
          type: boolean
        expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        notification_id:
          type: string
          format: uuid
        type:
          type: string
          example: "weather_alert"
        content:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
