# 워크플로우 이름
name: Deploy to Elastic Beanstalk via OIDC

# main 브랜치에 푸시될 때 실행
on:
  push:
    branches:
      - main

# GitHub Actions가 OIDC 토큰을 요청할 수 있도록 권한 부여
permissions:
  id-token: write # 필수
  contents: read  # 필수

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build

      # 4. AWS 자격 증명 구성 (OIDC 방식)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }} # ❗️ GitHub Secret에 저장한 역할 ARN
          aws-region: ap-northeast-2                      # ❗️ 본인의 AWS 리전으로 변경

      # 5. Elastic Beanstalk에 배포
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          application_name: Aibe2-team3-compass # ❗️ 본인의 EB 애플리케이션 이름으로 변경
          environment_name: Aibe2-team3-compass-env-1   # ❗️ 본인의 EB 환경 이름으로 변경
          version_label: "v${{ github.run_number }}"
          region: ap-northeast-2            # ❗️ 본인의 AWS 리전으로 변경
          deployment_package: build/libs/your-app-name-0.0.1-SNAPSHOT.jar # ❗️ 빌드된 JAR 파일 경로로 변경
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID}}