
✈️ 여행 추천 서비스 전체 API 명세서 (최종 수정본)
1. 사용자 인증 (User Authentication)
1.1. POST /api/users/signup (회원가입)
요구사항 ID: UC-U001

설명: 이메일, 비밀번호, 닉네임으로 새로운 사용자를 생성합니다.

Request Body: SignUpRequest (email, password, nickname)

Response (201 Created): UserResponse (id, email, nickname, createdAt)

1.2. POST /api/auth/login (로그인)
요구사항 ID: UC-U002

설명: 이메일과 비밀번호로 사용자를 인증하고 JWT 토큰을 발급합니다.

Request Body: LoginRequest (email, password)

Response (200 OK): TokenResponse (accessToken, refreshToken)

1.3. POST /api/auth/logout (로그아웃)
요구사항 ID: UC-U002

설명: 사용자를 로그아웃 처리하고 Refresh Token을 비활성화합니다.

Request Body: LogoutRequest (refreshToken)

Response (204 No Content): 내용 없음.

1.4. POST /api/auth/refresh (토큰 갱신)
요구사항 ID: UC-U003

설명: 유효한 Refresh Token으로 새로운 Access Token을 발급받습니다.

Request Body: RefreshRequest (refreshToken)

Response (200 OK): AccessTokenResponse (accessToken)

1.5. GET /api/auth/social/{provider} (소셜 로그인 시작)
요구사항 ID: UC-U008

설명: 지정된 소셜 서비스(Google, Kakao)의 인증 페이지로 사용자를 리디렉션합니다.

Path Parameter: provider (String, google 또는 kakao)

Response (302 Found): 소셜 인증 페이지로 리디렉션.

1.6. GET /api/auth/social/{provider}/callback (소셜 로그인 콜백)
요구사항 ID: UC-U008

설명: 소셜 서비스에서 인증 후, 인증 코드를 받아 백엔드에서 로그인/회원가입을 처리하고 JWT를 발급합니다.

Query Parameter: code (String, 소셜 서비스가 제공)

Response (200 OK): TokenResponse (accessToken, refreshToken)

2. 사용자 프로필 및 계정 (User Profile & Account)
2.1. GET /api/users/me (내 프로필 조회)
요구사항 ID: UC-U004

설명: 현재 로그인된 사용자의 프로필 정보를 조회합니다.

Request Headers: Authorization: Bearer {accessToken}

Response (200 OK): UserProfileResponse (id, email, nickname, profileImageUrl, preferredRegion)

2.2. PUT /api/users/me (프로필 수정)
요구사항 ID: UC-U004

설명: 현재 로그인된 사용자의 프로필 정보를 수정합니다.

Request Headers: Authorization: Bearer {accessToken}

Request Body: UpdateProfileRequest (nickname, preferredRegion 등)

Response (200 OK): UserProfileResponse (수정된 전체 프로필)

2.3. POST /api/users/password/reset-request (비밀번호 재설정 요청)
요구사항 ID: UC-U005

설명: 가입된 이메일로 비밀번호 재설정 링크를 발송합니다.

Request Body: PasswordResetRequest (email)

Response (204 No Content): 내용 없음.

2.4. POST /api/users/password/reset (새 비밀번호 설정)
요구사항 ID: UC-U005

설명: 이메일로 받은 토큰과 새 비밀번호로 비밀번호를 최종 변경합니다.

Request Body: NewPasswordRequest (token, newPassword)

Response (204 No Content): 내용 없음.

2.5. POST /api/users/me/security/2fa (2단계 인증 활성화/비활성화)
요구사항 ID: UC-U009

설명: 사용자의 2단계 인증(2FA) 설정을 변경합니다.

Request Headers: Authorization: Bearer {accessToken}

Request Body: Toggle2FARequest (enable: boolean)

Response (200 OK): { "is2faEnabled": boolean }

2.6. GET /api/users/me/login-history (로그인 기록 조회)
요구사항 ID: UC-U009

설명: 사용자의 최근 로그인 활동 기록을 조회합니다.

Request Headers: Authorization: Bearer {accessToken}

Response (200 OK): [LoginHistoryResponse] (ipAddress, deviceInfo, loginAt 배열)

2.7. DELETE /api/users/me (회원 탈퇴)
요구사항 ID: UC-U011

설명: 로그인된 사용자가 본인 확인 후 계정을 비활성화(탈퇴)합니다.

Request Headers: Authorization: Bearer {accessToken}

Request Body: WithdrawalRequest (password)

Response (204 No Content): 내용 없음.

3. 추천 & 큐레이션 (Recommendation & Curation)
3.1. GET /api/recommendations/personalized (개인화 추천)
요구사항 ID: UC-R001

설명: 사용자의 활동 기록을 기반으로 개인화된 장소/큐레이션을 추천합니다.

Request Headers: Authorization: Bearer {accessToken} (선택)

Response (200 OK): PersonalizedRecsResponse (places, curations 등)

3.2. GET /api/trends (트렌드 분석 정보 조회)
요구사항 ID: UC-R003

설명: 인기 여행지, 시즌별 트렌드 등 분석 정보를 제공합니다.

Response (200 OK): TrendsResponse (popularPlaces, seasonalTrends 등)

3.3. GET /api/curations (큐레이션 패키지 목록 조회)
요구사항 ID: UC-R004

설명: 발행된 모든 큐레이션 패키지 목록을 조회합니다.

Response (200 OK): [CurationPackageResponse] (큐레이션 패키지 배열)

3.4. GET /api/curations/{packageId} (큐레이션 패키지 상세 조회)
요구사항 ID: UC-R004

설명: 특정 큐레이션 패키지의 상세 정보를 조회합니다.

Path Parameter: packageId (String)

Response (200 OK): CurationPackageDetailResponse (패키지 정보 및 포함된 장소 목록 포함)

4. 관리자 (Admin)
4.1. GET /api/admin/dashboard (대시보드 핵심 지표 조회)
요구사항 ID: UC-U012

설명: 신규 가입자, 총 사용자, 승인 대기 콘텐츠 수 등 핵심 지표를 조회합니다.

Request Headers: Authorization: Bearer {adminAccessToken}

Response (200 OK): DashboardResponse (newUserCount, totalUserCount, pendingContentCount 등)

4.2. PUT /api/admin/users/{userId}/role (사용자 권한 변경)
요구사항 ID: UC-U006

설명: 관리자가 특정 사용자의 역할을 변경합니다.

Request Headers: Authorization: Bearer {adminAccessToken}

Path Parameter: userId (String)

Request Body: UpdateRoleRequest (role)

Response (200 OK): UserResponse (변경된 사용자 정보)

4.3. GET /api/admin/content/pending (통합 승인 대기 목록 조회)
요구사항 ID: UC-U010

설명: 승인 대기 중인 모든 유형의 콘텐츠 (리뷰, 사진 등) 목록을 조회합니다.

Request Headers: Authorization: Bearer {adminAccessToken}

Response (200 OK): [PendingContentResponse]

JSON

[
  { "contentType": "review", "contentId": "uuid-...", "author": "김리뷰", "snippet": "경치가 정말...", "createdAt": "..." },
  { "contentType": "photo", "contentId": "uuid-...", "author": "박사진", "snippet": "https://.../photo.jpg", "createdAt": "..." }
]
4.4. PUT /api/admin/content/{contentType}/{contentId}/status (통합 콘텐츠 승인/반려)
요구사항 ID: UC-U010

설명: 지정된 유형과 ID를 가진 콘텐츠의 상태를 일관된 방식으로 변경합니다.

Request Headers: Authorization: Bearer {adminAccessToken}

Path Parameters: contentType (String), contentId (String)

Request Body: UpdateStatusRequest (status: "APPROVED" | "REJECTED", reason?: String)

Response (200 OK): { "status": "APPROVED" }

4.5. PUT /api/admin/settings (시스템 설정 변경)
요구사항 ID: UC-U007

설명: 관리자가 시스템의 전역 설정을 변경합니다.

Request Headers: Authorization: Bearer {adminAccessToken}

Request Body: SystemSettingsRequest (다양한 설정 키-값 쌍)

Response (200 OK): SystemSettingsResponse (업데이트된 전체 설정)

※ API로 노출되지 않는 백엔드 프로세스
UC-R002 (학습 파이프라인): API가 아닌, 주기적으로 실행되는 내부 배치(Batch) 작업입니다. user_activities 데이터를 주기적으로 수집하여 추천 모델을 학습시키고 업데이트합니다.

UC-R005 (A/B 테스트): 별도의 API가 아닌, GET /api/recommendations/personalized API의 내부 로직에 포함됩니다. 요청 사용자를 특정 그룹(A 또는 B)에 할당하고, 해당 그룹에 맞는 추천 모델의 결과를 반환합니다. 사용자의 행동은 user_activities 테이블의 ab_test_group 필드에 기록됩니다.