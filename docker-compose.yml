version: '3.8'

services:
  # Redis only - PostgreSQL is handled by AWS RDS
  redis:
    image: redis:7-alpine
    container_name: compass-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - compass-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: compass-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # No profile needed - using single application.yml
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      # Database Configuration (AWS RDS)
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      # JWT Configuration
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET:-dev-jwt-access-secret-key-for-local-development-only-256bits}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-jwt-refresh-secret-key-for-local-development-only-256bits}
      JWT_ACCESS_TOKEN_EXPIRY: ${JWT_ACCESS_TOKEN_EXPIRY:-3600000}
      JWT_REFRESH_TOKEN_EXPIRY: ${JWT_REFRESH_TOKEN_EXPIRY:-604800000}
      # AI Services
      OPENAI_API_KEY: ${OPENAI_API_KEY:-test-key}
      GOOGLE_CLOUD_PROJECT_ID: ${GOOGLE_CLOUD_PROJECT_ID:-test-project}
      GOOGLE_CLOUD_LOCATION: ${GOOGLE_CLOUD_LOCATION:-us-central1}
      GEMINI_MODEL: ${GEMINI_MODEL:-gemini-2.0-flash}
      GEMINI_TEMPERATURE: ${GEMINI_TEMPERATURE:-0.7}
      GOOGLE_CREDENTIALS_BASE64: ${GOOGLE_CREDENTIALS_BASE64:-}
      GOOGLE_APPLICATION_CREDENTIALS: /app/travelagent-468611-1ae0c9d4e187.json
    volumes:
      - ./logs:/app/logs
      - ./travelagent-468611-1ae0c9d4e187.json:/app/travelagent-468611-1ae0c9d4e187.json:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - compass-network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  compass-network:
    driver: bridge